rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Smart plug data collection
    match /smart_plugs/{plugId} {
      // Allow read if user is authenticated
      allow read: if isAuthenticated();
      
      // Allow write if user is authenticated (we can make this more restrictive later)
      allow write: if isAuthenticated();

      // Commands subcollection
      match /commands/{commandId} {
        allow read, write: if isAuthenticated();
      }

      // History subcollection
      match /history/{historyId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
      }
    }

    // User settings and preferences
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      // User's device settings subcollection
      match /devices/{deviceId} {
        allow read, write: if isOwner(userId);
      }
    }
  }
} 