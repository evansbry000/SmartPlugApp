rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Smart plug data collection
    match /smart_plugs/{plugId} {
      // Allow read if user is authenticated and owns the plug
      allow read: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
      
      // Allow write if user is authenticated and owns the plug
      allow write: if isAuthenticated() && resource.data.ownerId == request.auth.uid;

      // Commands subcollection
      match /commands/{commandId} {
        allow read: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
        allow write: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
      }

      // Events subcollection (for warnings, emergencies, etc.)
      match /events/{eventId} {
        allow read: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
        allow write: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
      }

      // History subcollection (for historical data)
      match /history/{historyId} {
        allow read: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
        allow write: if isAuthenticated() && get(/databases/$(database)/documents/smart_plugs/$(plugId)).data.ownerId == request.auth.uid;
      }
    }

    // User settings and preferences
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      // User's device settings subcollection
      match /devices/{deviceId} {
        allow read, write: if isOwner(userId);
      }

      // User's notification preferences
      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId);
      }
    }
  }
} 